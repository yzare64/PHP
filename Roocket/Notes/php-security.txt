
SQL Injection
امنیت پسوردها 
Directory list محافظت از
حمله XSS 
باگ CSRF
جداسازی حالت توسعه و نهایی
امنیت کوکی‌ها
فایل‌های متفرقه
استفاده از HTTPS
آپدیت بودن ورژن PHP
استفاده از فریمورک به جای Pure PHP






هیچ زبان برنامه نویسی امن نیست چون توسط انسان ساخته شده و ممکنه باگ داشته باشه . پی اچ  پی امن هست چون اوپن سورس و توسط خیلی ها توسعه داده میشه
php.net سایت رسمی 
همیشه ورژن نرم افزار ها باید آپدیت کنیم 
die();
php -S localhost:8888 -t php-security 
';DROP table article;--
PDO و prepare و  execute و bindParam
نکته مهم : در لاراول یا فریمورک های دیگه که از مدل استفاده میشه و در هسته اشان از sql injection  جلوگیری میشه
sqlinjection از طریق فرم ها و ورودی کاربران یا از طریق جستجو و url  پیش میاد
در لاراول یا mvc که از model  استفاده میشه دیگه خطر اینجکشن ندارد البته باید طبق مستندات پیش رفت 
crackstation.net سایت هک هش ها 
روش md5 افتضاحه
تابع password_hash بهترین هش کردن هست و اکثر فریم ورک ها ازش استفاده می کنند و هر بار یه روش هش استفاده میکند
تابع password_verify(); چک کردن پسورد درست یا نه
در گوگل سرچ شود در مورد اعتبارسنجی پسورد که مثلا ۱۲۳۴۵۶ یا اینکه کارکتر داشته باشه حرف بزرگ کوچک و یا @

directorylist نمایش ندادن لیست پوشه ها و فایل ها در مرورگر 
باید یک فایل .htaccess  اضافه کرد و درون آن عبارت  option -indexs را اضافه کرد 
نکته: اگر در پوشه public_html  فایل  .htaccess  را اضافه کنیم بر روی همه پوشه ها تاثیر میذاره البته اگر  آپاچی باشه 

استفاده از https  برای امنیت بیشتر و ربطی به زبان برنامه نویسی ندارد 
ISP نمیتونه به اطلاعات دسترسی پیدا کنه 

فایل های متفرقه مثلا پسوند .inc استفاده نکنیم چون کدها را در مرورگر نمایش داده میشود و باید حتما از .php  استفاده کنیم چون در مرورگر کدها نشون داده نمیشه و صفحه سفید نشون داده میشه 

cross site scripting or xss  چون با css  اشتباه گرفته نشه
xss  یعنی تزریق اسکریپت(جاوااسکریپت) از طریق وبگاه مانند </script><script> در دیتابیس و دزدیدن کوکی ها 
حمله xss میتواند از طریق sql injection اتفاق بیفتد 

نکته مهم : در مرورگر باید inspect  زد و سپس به فسمت network  رفت و درخواست ها را چک کرد که چه درخواست هایی ارسال میشود به کدام سرور یا ... و اینطوری میتوانیم از هک شدن جلوگیری کنیم

در inspect  مرورگر قسمت consol  میتوان با document.cookie کوکی را بدست آورد

برای جلوگیری از حمله xss در هر جای پروژه که اطلاعات حساسی از کاربر وارد میشه باید از تابع htmlspecialchars() استفاده کرد این تابع در واقع اسکریپت را به شکل رشته میکنه و در واقع از حمله جلوگیری میکنه . در لاراول در هسته اش از این تابع استفاده میکنه یعنی در هنگام کامپایل blade  به php

اتک یعنی حمله attack
 csrf در واقع همون token  در opencart  
csrf یعنی جعل درخواست یا جعل لینک مثلا لینک delete  یا edit 
برای delete  یا  edit  همیشه باید post  استفاده کرد و نباید از get  استفاده کرد.

حالت توسعه(develop) و حالت نهایی (production)
در حالت نهایی پروژه بر روی سرور قرار گرفته میشه
در حالت توسعه خطا نمایش داده میشود ولی در حالت نهایی نباید خطا نشان داده شود و در واقع باید خطا لاگ گرفته شود 
در php.ini  میتوانیم تنظیم کنیم حالت  توسعه(development) یا نهایی(production) رو که خطا فعال باشد یا خیر. display_errors=off در حالت production
نکته :اگر در php.ini  خطا را غیرفعال کنیم برای همه پروژه ها غیرفعال میشه و این درست نیست.

امنیت کوکی ها 
با استفاده از inspect  و در قسمت consol میتوان با استفاده از دستور document_cookie  کوکی را برگرداند
۱-اگر در تابع کوکی در php گزینه httponly  را فعال کنیم دیگه نمیشه با استفاده از جاوا اسکریت به کوکی دسترسی داشت
۲-اطلاعات حساس را نباید در کوکی ذخیره کرد چون کوکی را میشه به سادگی تغییر داد چون کوکی سمت کاربر ذخیره میشه.
۳- اطلاعات کوکی را باید هش یا اینکریپت کرد و کوکی را امن کرد. 

برای جلوگیری از حملات csrf از چه روشی استفاده می شود؟۱
هنگام ارسال اطلاعات از طریق فرم ، توکنی در سشن ذخیره می گردد سپس در صفحه ی مقصد در صورت یکسان بودن مقدار توکن دریافت شده از فرم با مقدار توکن ذخیره شده در سشن ، اجازه ی ادامه کار داده می شود.

در لاراول باید حالت production  فعال شه
در لاراول باید برای ورودی کاربر از scape  استفاده کرد برای جلوگیری از اتک xss
